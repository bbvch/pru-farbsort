#ifndef PRU_CGT
#define ERROR_BODY
#PRU_CGT environment variable is not set
#endef
#$(error $(ERROR_BODY))
#endif
#ifndef PRU_LIB
#define ERROR_BODY
#PRU_LIB environment variable is not set
#endef
#$(error $(ERROR_BODY))
#endif
ifndef CLPRU
CLPRU=$(PRU_CGT)/bin/clpru
endif
ifndef $(BUILD_DIR)
BUILD_DIR=.
$(shell mkdir -p ./bin)
endif

SRC_DIR=src
INC_DIR=include
OBJ_DIR=obj
BIN_DIR=bin

MKFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
CURRENT_DIR := $(notdir $(patsubst %/,%,$(dir $(MKFILE_PATH))))
PROJ_NAME=$(CURRENT_DIR)
LINKER_COMMAND_FILE=./AM335x_PRU.cmd

ifdef PRU_ICSS_LIB_PATH
LIBS=--library=$(PRU_ICSS_LIB_PATH)/rpmsg_lib.lib
else
LIBS=--library=$(PRU_LIB)/lib/rpmsg_lib.lib
endif


ifdef PRU_ICSS_INC_PATH
INCLUDE=--include_path=$(PRU_ICSS_INC_PATH) --include_path=$(PRU_ICSS_INC_PATH)/am335x --include_path=$(INC_DIR)/hw --include_path=$(INC_DIR)/ctrl --include_path=$(INC_DIR)
else
INCLUDE=--include_path=$(PRU_LIB)/include --include_path=$(PRU_LIB)/include/am335x --include_path=$(INC_DIR)/hw --include_path=$(INC_DIR)/ctrl --include_path=$(INC_DIR)
endif


STACK_SIZE=0x100
HEAP_SIZE=0x100


#Common compiler and linker flags (Defined in 'PRU Optimizing C/C++ Compiler User's Guide)
CFLAGS=-v3 -O4 --display_error_number --endian=little --hardware_mac=on --obj_directory=$(OBJ_DIR) --pp_directory=$(OBJ_DIR) -ppd -ppa
#Linker flags (Defined in 'PRU Optimizing C/C++ Compiler User's Guide)
LFLAGS=--reread_libs --warn_sections --stack_size=$(STACK_SIZE) --heap_size=$(HEAP_SIZE)

TARGET=$(BIN_DIR)/am335x-pru0-fw
MAP=$(OBJ_DIR)/$(PROJ_NAME).map

SOURCES=$(wildcard $(SRC_DIR)/*.cpp) $(wildcard $(SRC_DIR)/hw/*.cpp)  $(wildcard $(SRC_DIR)/ctrl/*.cpp) 
#Using .object instead of .obj in order to not conflict with the CCS build process
OBJECTS:=$(addprefix $(OBJ_DIR)/, $(SOURCES:%cpp=%object))

all: printStart $(TARGET) printEnd

printStart:
	@echo ''
	@echo '************************************************************'
	@echo 'Building project: $(PROJ_NAME)'

printEnd:
	@echo ''
	@echo 'Finished building project: $(PROJ_NAME)'
	@echo '************************************************************'
	@echo ''

# Invokes the linker (-z flag) to make the .out file
$(TARGET): $(OBJECTS) $(LINKER_COMMAND_FILE)
	@echo ''
	@echo 'Building target: $@'
	@echo 'Invoking: PRU Linker'
	$(CLPRU) $(CFLAGS) -z -i$(PRU_CGT)/lib -i$(PRU_CGT)/include $(LFLAGS) -o $(TARGET) $(OBJECTS) -m$(MAP) $(LINKER_COMMAND_FILE) --library=libc.a $(LIBS)
	@echo 'Finished building target: $@'
	@echo ''
	@echo 'Output files can be found in the "$(BIN_DIR)" directory'

# Invokes the compiler on all cpp files in the directory to create the object files
$(OBJ_DIR)/%.object: %.cpp
	@mkdir -p $(@D)
	@echo ''
	@echo 'Building file: $<'
	@echo 'Invoking: PRU Compiler'
	$(CLPRU) --include_path=$(PRU_CGT)/include $(INCLUDE) $(CFLAGS) --c++03 -fe $@ $<


.PHONY: all clean install

# Remove the $(OBJ_DIR) directory
clean:
	@echo ''
	@echo '************************************************************'
	@echo 'Cleaning project: $(PROJ_NAME)'
	@echo ''
	@echo 'Removing files in the "$(OBJ_DIR)" directory'
	@rm -f $(OBJECTS)
	@rm -f $(OBJ_DIR)/*.pp
	@rm -f $(MAP)
	@echo ''
	@echo 'Finished cleaning project: $(PROJ_NAME)'
	@echo '************************************************************'
	@echo ''

install: $(TARGET)
	cp $(TARGET) /lib/firmware/am335x-pru0-fw

# Includes the dependencies that the compiler creates (-ppd and -ppa flags)
-include $(OBJECTS:%.object=%.pp)
